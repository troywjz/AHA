# 圆周率
# 近似计算公式
pi = 0
N = 100
for k in range (N):
    pi += 1/pow(16,k)*(4/(8*k+1) - 2/(8*k+4) - 1/(8*k+5) - 1/(8*k+6))
print(pi)
# 蒙特卡洛法（撒点）
from random import random # 随机数库
from time import perf_counter # 程序计时库
DARTS = 1000*1000
hits = 0.0
start = perf_counter()
for i in range(1, DARTS+1):
    x, y = random(), random()
    dist = pow(x ** 2 + y ** 2, 0.5)
    if dist <= 1.0:
        hits = hits + 1
pi = 4 * (hits/DARTS)
print(pi)
print("蒙塔卡洛法计算时间:{:.5f}s".format(perf_counter() - start))
